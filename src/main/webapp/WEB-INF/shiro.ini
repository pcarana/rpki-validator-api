# Read more about this configuration file at https://shiro.apache.org/configuration.html, and also
# is recommended to read https://shiro.apache.org/web.html

#--------------
# MAIN SECTION
#--------------
[main]
# Use default web session manager, disable session cookies (patch to force authentication by request,
# basic behavior of REST)
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager
securityManager.sessionManager.sessionIdCookieEnabled = false

# Use Basic HTTP Authentication preventing CORS
authcBasic = mx.nic.lab.rpki.api.filter.BasicHttpAuthenticationCorsFilter

# Realm used at HTTP header "WWW-Authenticate" when responding a 401 code
# Uncomment the following line if default basic authentication is going to be used
authcBasic.applicationName = rpki-validator-api

# Filter to protect resources using a valid JWT token, the token must be requested at the /tokens servlet
jwtVerify = mx.nic.lab.rpki.api.filter.JWTVerifyFilter

#--------------
# USERS SECTION
#--------------
# Uncomment some of the following lines if users are going to be configured in this file.
# The hashed passwords are an example to use with the 'hashedMatcher', see more at:
# https://shiro.apache.org/configuration.html#Configuration-%5Cusers%5C and
# https://shiro.apache.org/command-line-hasher.html
# Users can also be configured to have permissions, see more at https://shiro.apache.org/permissions.html

[users]
# Option 1: Without hash
alvin = alvin
bob = bob

# Option 2: Hash with NO SALT
# Hash obtained with: java -jar shiro-tools-hasher-1.3.2-cli.jar -a SHA-256 -i 500000 -f hex alvin
#alvin = 3029b98a65580966962d5bd2d7b65dce74fb516ead1fe5875c806574eed51d29
# Hash obtained with: java -jar shiro-tools-hasher-1.3.2-cli.jar -a SHA-256 -i 500000 -f hex bob
#bob = 6aa575bc586fa4b3dbc017a717995443141dbb7d0d800dd06d74a5f5e9ba1895

# Option 3: Hash with SALT equal to the username
# NOTE: can only be used with a Realm that can return the salt (eg. using a JdbcRealm the salt returned depends
# of the 'SaltStyle' defined)
# Hash obtained with: java -jar shiro-tools-hasher-1.3.2-cli.jar -a SHA-256 -s alvin -i 500000 -f hex alvin
#alvin = 33e28cfbe4ce096cb4b131348cac50fd16899093bf9f01da7ba74d492b89bac8
# Hash obtained with: java -jar shiro-tools-hasher-1.3.2-cli.jar -a SHA-256 -s bob -i 500000 -f hex bob
#bob = caf0ad23508d4757baf149159b6afadfe5e1a0072c3282946feb8379cbade3ce


#--------------
# URLS SECTION
#--------------
[urls]
# Restricted paths that need authentication (one path per line)
# Request a token using basic authentication
/tokens = noSessionCreation, authcBasic
# Protect the resources using a JWT
/slurm/prefix/** = noSessionCreation, jwtVerify, rest
/slurm/bgpsec/** = noSessionCreation, jwtVerify, rest
/tal/sync/** = noSessionCreation, jwtVerify, rest
# The rest of the resources will be accessed anonymously
/** = anon